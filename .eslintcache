[{"/Users/nataliemclaren/Sites/hacker-news-reader/src/index.tsx":"1","/Users/nataliemclaren/Sites/hacker-news-reader/src/serviceWorkerRegistration.ts":"2","/Users/nataliemclaren/Sites/hacker-news-reader/src/reportWebVitals.ts":"3","/Users/nataliemclaren/Sites/hacker-news-reader/src/App.tsx":"4","/Users/nataliemclaren/Sites/hacker-news-reader/src/theme/colours.tsx":"5","/Users/nataliemclaren/Sites/hacker-news-reader/src/theme/devices.tsx":"6","/Users/nataliemclaren/Sites/hacker-news-reader/src/theme/sizes.tsx":"7","/Users/nataliemclaren/Sites/hacker-news-reader/src/helpers/api.tsx":"8","/Users/nataliemclaren/Sites/hacker-news-reader/src/components/Header.tsx":"9","/Users/nataliemclaren/Sites/hacker-news-reader/src/components/StoriesList.tsx":"10","/Users/nataliemclaren/Sites/hacker-news-reader/src/config.tsx":"11","/Users/nataliemclaren/Sites/hacker-news-reader/src/components/Story.tsx":"12","/Users/nataliemclaren/Sites/hacker-news-reader/src/helpers/dates.tsx":"13","/Users/nataliemclaren/Sites/hacker-news-reader/src/components/headings/InfoHeading.tsx":"14","/Users/nataliemclaren/Sites/hacker-news-reader/src/components/buttons/Button.tsx":"15","/Users/nataliemclaren/Sites/hacker-news-reader/src/components/notifications/ToastNotification.tsx":"16"},{"size":816,"mtime":1611757190753,"results":"17","hashOfConfig":"18"},{"size":5256,"mtime":1611768562516,"results":"19","hashOfConfig":"18"},{"size":425,"mtime":1611655632286,"results":"20","hashOfConfig":"18"},{"size":2625,"mtime":1611849635822,"results":"21","hashOfConfig":"18"},{"size":167,"mtime":1611848332746,"results":"22","hashOfConfig":"18"},{"size":506,"mtime":1611664883712,"results":"23","hashOfConfig":"18"},{"size":189,"mtime":1611664883718,"results":"24","hashOfConfig":"18"},{"size":785,"mtime":1611849635826,"results":"25","hashOfConfig":"18"},{"size":708,"mtime":1611849635824,"results":"26","hashOfConfig":"18"},{"size":4686,"mtime":1611849635824,"results":"27","hashOfConfig":"18"},{"size":137,"mtime":1611845392236,"results":"28","hashOfConfig":"18"},{"size":1407,"mtime":1611849635825,"results":"29","hashOfConfig":"18"},{"size":854,"mtime":1611849635826,"results":"30","hashOfConfig":"18"},{"size":807,"mtime":1611849635825,"results":"31","hashOfConfig":"18"},{"size":400,"mtime":1611849331515,"results":"32","hashOfConfig":"18"},{"size":1765,"mtime":1611849635826,"results":"33","hashOfConfig":"18"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},"13txryf",{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"36"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},"/Users/nataliemclaren/Sites/hacker-news-reader/src/index.tsx",[],["68","69"],"/Users/nataliemclaren/Sites/hacker-news-reader/src/serviceWorkerRegistration.ts",[],"/Users/nataliemclaren/Sites/hacker-news-reader/src/reportWebVitals.ts",[],"/Users/nataliemclaren/Sites/hacker-news-reader/src/App.tsx",["70"],"/Users/nataliemclaren/Sites/hacker-news-reader/src/theme/colours.tsx",[],"/Users/nataliemclaren/Sites/hacker-news-reader/src/theme/devices.tsx",[],"/Users/nataliemclaren/Sites/hacker-news-reader/src/theme/sizes.tsx",[],"/Users/nataliemclaren/Sites/hacker-news-reader/src/helpers/api.tsx",[],"/Users/nataliemclaren/Sites/hacker-news-reader/src/components/Header.tsx",[],"/Users/nataliemclaren/Sites/hacker-news-reader/src/components/StoriesList.tsx",["71","72"],"import React, {\n  ReactElement,\n  useCallback,\n  useEffect,\n  useRef,\n  useState,\n} from \"react\";\nimport Story from \"./Story\";\nimport * as APIHelper from \"../helpers/api\";\nimport InfiniteScroll from \"react-infinite-scroll-component\";\nimport { IStory } from \"../interfaces/IStory\";\nimport InfoHeading from \"./headings/InfoHeading\";\nimport { colours } from \"../theme/colours\";\nimport * as DatesHelper from \"../helpers/dates\";\n\n/**\n * StoriesList\n *\n * Displays a list of stories as fetched from the Hacker News API.\n * Makes use of an infite scroller to display the stories, which are checked\n * against certain conditions to ensure their validity.\n *\n * @returns {ReactElement} div\n */\nconst StoriesList: React.ElementType = (): ReactElement => {\n  const INCREMENT_INDEX_BY = 20;\n  const MAX_FETCHED_INDEX_NUMBER = 480;\n\n  const [stories, setStories] = useState<[]>([]);\n  const [error, setError] = React.useState<boolean>(false);\n  const storyIds = useRef<Array<number> | []>([]);\n  const fetchedIndex = useRef<number>(0);\n  const isFetchingItems = useRef<boolean>(false);\n\n  const sortedByDesc: Array<IStory> = DatesHelper.orderByDesc(stories);\n\n  const allStories: Array<ReactElement> =\n    sortedByDesc &&\n    sortedByDesc.map((story: IStory) => <Story key={story.id} story={story} />);\n\n  /**\n   * isAValidStory\n   *\n   * Checks a story against certain conditions to ensure it's valid.\n   * Conditions: the type is 'story', it has a url, it isn't dead or deleted.\n   *\n   * @param {IStory} story\n   * @returns {boolean} true or false depending on whether it is valid or not\n   */\n  const isAValidStory = (story: IStory): boolean => {\n    return (\n      story.type === \"story\" &&\n      !story.deleted &&\n      !story.dead &&\n      story.url !== \"\"\n    );\n  };\n\n  /**\n   * getMoreStories\n   *\n   * Slices the amount of story ids previously fetched to fetch individual stories 20 at a time.\n   * Checks for the validity of a story.\n   * Adds story to state & updates the last fetched story (by index).\n   */\n  const getMoreStories = useCallback(async () => {\n    if (\n      isFetchingItems.current === false &&\n      fetchedIndex.current <= MAX_FETCHED_INDEX_NUMBER\n    ) {\n      isFetchingItems.current = true;\n\n      const sliced = storyIds.current.slice(\n        fetchedIndex.current,\n        fetchedIndex.current + INCREMENT_INDEX_BY\n      );\n\n      sliced.forEach(async (id: number) => {\n        await APIHelper.fetchItem(id)\n          .then((response: any) => {\n            if (!response) {\n              throw Error(\"API Error\"); // catching any incorrect/broken API urls\n            }\n            return response.json();\n          })\n          .then((story: any) => {\n            if (isAValidStory(story)) {\n              setStories((str: any) => str.concat(story));\n            }\n          })\n          .catch((err: any) => {\n            console.warn(\"Error retrieving items from API.\");\n          });\n      });\n    }\n\n    fetchedIndex.current = fetchedIndex.current + INCREMENT_INDEX_BY;\n    isFetchingItems.current = false;\n  }, [fetchedIndex, isFetchingItems]);\n\n  useEffect(() => {\n    /**\n     * fetchNewStories\n     *\n     * Fetches up to 500 of the latest story ids.\n     * Begins the process of getting individual stories for each of those ids.\n     *\n     */\n    const fetchNewStories = async () => {\n      isFetchingItems.current = true;\n      await APIHelper.fetchNewStories()\n        .then((response: any) => {\n          if (!response) {\n            throw new Error(\"API Error\"); // catching any incorrect/broken API urls\n          }\n          return response.json();\n        })\n        .then((newStoriesIds: any) => {\n          storyIds.current = newStoriesIds;\n          isFetchingItems.current = false;\n          getMoreStories();\n        })\n        .catch((err) => {\n          console.warn(\"Error retrieving items from API.\");\n        });\n    };\n\n    if (!isFetchingItems.current) {\n      fetchNewStories();\n    }\n  }, []);\n\n  if (error) {\n    return (\n      <InfoHeading data-test=\"component-error\" colour={colours.orange}>\n        API Error\n      </InfoHeading>\n    );\n  }\n\n  if (!allStories.length) {\n    return (\n      <InfoHeading colour={\"black\"} data-test=\"component-stories-list\">\n        LOADING...\n      </InfoHeading>\n    );\n  }\n\n  return (\n    <div data-test=\"component-stories-list\">\n      <InfiniteScroll\n        dataLength={stories.length}\n        next={getMoreStories}\n        hasMore={stories[stories.length - 1] !== 1}\n        loader={<InfoHeading>Loading...</InfoHeading>}\n        endMessage={<p>No more stories, you have seen it all.</p>}\n      >\n        {allStories}\n      </InfiniteScroll>\n    </div>\n  );\n};\n\nexport default StoriesList;\n","/Users/nataliemclaren/Sites/hacker-news-reader/src/config.tsx",[],"/Users/nataliemclaren/Sites/hacker-news-reader/src/components/Story.tsx",[],"/Users/nataliemclaren/Sites/hacker-news-reader/src/helpers/dates.tsx",[],"/Users/nataliemclaren/Sites/hacker-news-reader/src/components/headings/InfoHeading.tsx",[],"/Users/nataliemclaren/Sites/hacker-news-reader/src/components/buttons/Button.tsx",[],"/Users/nataliemclaren/Sites/hacker-news-reader/src/components/notifications/ToastNotification.tsx",[],{"ruleId":"73","replacedBy":"74"},{"ruleId":"75","replacedBy":"76"},{"ruleId":"77","severity":1,"message":"78","line":1,"column":38,"nodeType":"79","messageId":"80","endLine":1,"endColumn":44},{"ruleId":"77","severity":1,"message":"81","line":28,"column":17,"nodeType":"79","messageId":"80","endLine":28,"endColumn":25},{"ruleId":"82","severity":1,"message":"83","line":123,"column":6,"nodeType":"84","endLine":123,"endColumn":8,"suggestions":"85"},"no-native-reassign",["86"],"no-negated-in-lhs",["87"],"@typescript-eslint/no-unused-vars","'useRef' is defined but never used.","Identifier","unusedVar","'setError' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getMoreStories'. Either include it or remove the dependency array.","ArrayExpression",["88"],"no-global-assign","no-unsafe-negation",{"desc":"89","fix":"90"},"Update the dependencies array to be: [getMoreStories]",{"range":"91","text":"92"},[3871,3873],"[getMoreStories]"]